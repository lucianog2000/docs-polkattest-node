(function() {var type_impls = {
"elliptic_curve":[],
"frame_support":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#258-266\">source</a><a href=\"#impl-BeforeAllRuntimeMigrations-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.BeforeAllRuntimeMigrations.html\" title=\"trait frame_support::traits::BeforeAllRuntimeMigrations\">BeforeAllRuntimeMigrations</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.BeforeAllRuntimeMigrations.html\" title=\"trait frame_support::traits::BeforeAllRuntimeMigrations\">BeforeAllRuntimeMigrations</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.BeforeAllRuntimeMigrations.html\" title=\"trait frame_support::traits::BeforeAllRuntimeMigrations\">BeforeAllRuntimeMigrations</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#261-265\">source</a><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.BeforeAllRuntimeMigrations.html#method.before_all_runtime_migrations\" class=\"fn\">before_all_runtime_migrations</a>() -&gt; <a class=\"struct\" href=\"frame_support/pallet_prelude/struct.Weight.html\" title=\"struct frame_support::pallet_prelude::Weight\">Weight</a></h4></section></summary><div class=\"docblock\"><p>Implements the default behavior of\n<a href=\"frame_support/traits/trait.BeforeAllRuntimeMigrations.html#method.before_all_runtime_migrations\" title=\"associated function frame_support::traits::BeforeAllRuntimeMigrations::before_all_runtime_migrations\"><code>BeforeAllRuntimeMigrations::before_all_runtime_migrations</code></a> for tuples.</p>\n</div></details></div></details>","BeforeAllRuntimeMigrations","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contains%3CT%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/members.rs.html#35-42\">source</a><a href=\"#impl-Contains%3CT%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.Contains.html\" title=\"trait frame_support::traits::Contains\">Contains</a>&lt;T&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.Contains.html\" title=\"trait frame_support::traits::Contains\">Contains</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.Contains.html\" title=\"trait frame_support::traits::Contains\">Contains</a>&lt;T&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/members.rs.html#36-41\">source</a><a href=\"#method.contains\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.Contains.html#tymethod.contains\" class=\"fn\">contains</a>(t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return <code>true</code> if this “contains” the given value <code>t</code>.</div></details></div></details>","Contains<T>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContainsPair%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/members.rs.html#53-60\">source</a><a href=\"#impl-ContainsPair%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.ContainsPair.html\" title=\"trait frame_support::traits::ContainsPair\">ContainsPair</a>&lt;A, B&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.ContainsPair.html\" title=\"trait frame_support::traits::ContainsPair\">ContainsPair</a>&lt;A, B&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.ContainsPair.html\" title=\"trait frame_support::traits::ContainsPair\">ContainsPair</a>&lt;A, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/members.rs.html#54-59\">source</a><a href=\"#method.contains\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.ContainsPair.html#tymethod.contains\" class=\"fn\">contains</a>(a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;A</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;B</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return <code>true</code> if this “contains” the pair-value <code>(a, b)</code>.</div></details></div></details>","ContainsPair<A, B>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-(Q0,+R0)\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#1421-1424\">source</a><a href=\"#impl-Decode-for-(Q0,+R0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Q0, R0&gt; <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Decode.html\" title=\"trait frame_support::pallet_prelude::Decode\">Decode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(Q0, R0)</a><div class=\"where\">where\n    Q0: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Decode.html\" title=\"trait frame_support::pallet_prelude::Decode\">Decode</a>,\n    R0: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Decode.html\" title=\"trait frame_support::pallet_prelude::Decode\">Decode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#1421-1424\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;INPUT&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut INPUT</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(Q0, R0)</a>, <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;<div class=\"where\">where\n    INPUT: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Input.html\" title=\"trait parity_scale_codec::codec::Input\">Input</a>,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#308\">source</a><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.decode_into\" class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.81.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"parity_scale_codec/decode_finished/struct.DecodeFinished.html\" title=\"struct parity_scale_codec::decode_finished::DecodeFinished\">DecodeFinished</a>, <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Input.html\" title=\"trait parity_scale_codec::codec::Input\">Input</a>,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.decode_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#320\">source</a><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.skip\" class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Input.html\" title=\"trait parity_scale_codec::codec::Input\">Input</a>,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#330\">source</a><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.encoded_fixed_size\" class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a href=\"frame_support/pallet_prelude/trait.Decode.html#method.encoded_fixed_size\">Read more</a></div></details></div></details>","Decode","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-(Q0,+R0)\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#1421-1424\">source</a><a href=\"#impl-Encode-for-(Q0,+R0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Q0, R0&gt; <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(Q0, R0)</a><div class=\"where\">where\n    Q0: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a>,\n    R0: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#1421-1424\">source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#1421-1424\">source</a><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.encode_to\" class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut T</a>)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"parity_scale_codec/codec/trait.Output.html\" title=\"trait parity_scale_codec::codec::Output\">Output</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#240\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.encode\" class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#247\">source</a><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.using_encoded\" class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/codec.rs.html#259\">source</a><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.encoded_size\" class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a href=\"frame_support/pallet_prelude/trait.Encode.html#method.encoded_size\">Read more</a></div></details></div></details>","Encode","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#338\">source</a><a href=\"#impl-IntegrityTest-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.IntegrityTest.html\" title=\"trait frame_support::traits::IntegrityTest\">IntegrityTest</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.IntegrityTest.html\" title=\"trait frame_support::traits::IntegrityTest\">IntegrityTest</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.IntegrityTest.html\" title=\"trait frame_support::traits::IntegrityTest\">IntegrityTest</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#338\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.IntegrityTest.html#method.integrity_test\" class=\"fn\">integrity_test</a>()</h4></section></summary><div class=\"docblock\"><p>See <a href=\"frame_support/traits/trait.Hooks.html#method.integrity_test\" title=\"associated function frame_support::traits::Hooks::integrity_test\"><code>Hooks::integrity_test</code></a>.</p>\n</div></details></div></details>","IntegrityTest","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KeyGenerator-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#111-146\">source</a><a href=\"#impl-KeyGenerator-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: KeyGeneratorInner, TupleElement1: KeyGeneratorInner&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGenerator.html\" title=\"trait frame_support::storage::types::KeyGenerator\">KeyGenerator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Key\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Key\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.Key\" class=\"associatedtype\">Key</a> = (&lt;TupleElement0 as <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGenerator.html\" title=\"trait frame_support::storage::types::KeyGenerator\">KeyGenerator</a>&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.Key\" title=\"type frame_support::storage::types::KeyGenerator::Key\">Key</a>, &lt;TupleElement1 as <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGenerator.html\" title=\"trait frame_support::storage::types::KeyGenerator\">KeyGenerator</a>&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.Key\" title=\"type frame_support::storage::types::KeyGenerator::Key\">Key</a>)</h4></section><section id=\"associatedtype.KArg\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.KArg\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.KArg\" class=\"associatedtype\">KArg</a> = (&lt;TupleElement0 as <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGenerator.html\" title=\"trait frame_support::storage::types::KeyGenerator\">KeyGenerator</a>&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.Key\" title=\"type frame_support::storage::types::KeyGenerator::Key\">Key</a>, &lt;TupleElement1 as <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGenerator.html\" title=\"trait frame_support::storage::types::KeyGenerator\">KeyGenerator</a>&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.Key\" title=\"type frame_support::storage::types::KeyGenerator::Key\">Key</a>)</h4></section><section id=\"associatedtype.HArg\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.HArg\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.HArg\" class=\"associatedtype\">HArg</a> = (&lt;TupleElement0 as <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGenerator.html\" title=\"trait frame_support::storage::types::KeyGenerator\">KeyGenerator</a>&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.HashFn\" title=\"type frame_support::storage::types::KeyGenerator::HashFn\">HashFn</a>, &lt;TupleElement1 as <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGenerator.html\" title=\"trait frame_support::storage::types::KeyGenerator\">KeyGenerator</a>&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.HashFn\" title=\"type frame_support::storage::types::KeyGenerator::HashFn\">HashFn</a>)</h4></section><section id=\"associatedtype.HashFn\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.HashFn\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.HashFn\" class=\"associatedtype\">HashFn</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section><section id=\"associatedconstant.HASHER_METADATA\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#117-118\">source</a><a href=\"#associatedconstant.HASHER_METADATA\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedconstant.HASHER_METADATA\" class=\"constant\">HASHER_METADATA</a>: &amp;'static [<a class=\"enum\" href=\"sp_metadata_ir/types/enum.StorageHasherIR.html\" title=\"enum sp_metadata_ir::types::StorageHasherIR\">StorageHasherIR</a>] = _</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.final_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#120-130\">source</a><a href=\"#method.final_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.KeyGenerator.html#tymethod.final_key\" class=\"fn\">final_key</a>&lt;KArg: <a class=\"trait\" href=\"frame_support/storage/types/trait.EncodeLikeTuple.html\" title=\"trait frame_support::storage::types::EncodeLikeTuple\">EncodeLikeTuple</a>&lt;Self::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.KArg\" title=\"type frame_support::storage::types::KeyGenerator::KArg\">KArg</a>&gt; + <a class=\"trait\" href=\"frame_support/storage/types/trait.TupleToEncodedIter.html\" title=\"trait frame_support::storage::types::TupleToEncodedIter\">TupleToEncodedIter</a>&gt;(\n    key: KArg,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Given a <code>key</code> tuple, calculate the final key by encoding each element individually and\nhashing them using the corresponding hasher in the <code>KeyGenerator</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.migrate_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#132-145\">source</a><a href=\"#method.migrate_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.KeyGenerator.html#tymethod.migrate_key\" class=\"fn\">migrate_key</a>&lt;KArg: <a class=\"trait\" href=\"frame_support/storage/types/trait.EncodeLikeTuple.html\" title=\"trait frame_support::storage::types::EncodeLikeTuple\">EncodeLikeTuple</a>&lt;Self::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.KArg\" title=\"type frame_support::storage::types::KeyGenerator::KArg\">KArg</a>&gt; + <a class=\"trait\" href=\"frame_support/storage/types/trait.TupleToEncodedIter.html\" title=\"trait frame_support::storage::types::TupleToEncodedIter\">TupleToEncodedIter</a>&gt;(\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;KArg</a>,\n    hash_fns: Self::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.HArg\" title=\"type frame_support::storage::types::KeyGenerator::HArg\">HArg</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Given a <code>key</code> tuple, migrate the keys from using the old hashers as given by <code>hash_fns</code>\nto using the newer hashers as specified by this <code>KeyGenerator</code>.</div></details></div></details>","KeyGenerator","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KeyGeneratorMaxEncodedLen-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#150-160\">source</a><a href=\"#impl-KeyGeneratorMaxEncodedLen-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: KeyGeneratorInner + <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGeneratorMaxEncodedLen.html\" title=\"trait frame_support::storage::types::KeyGeneratorMaxEncodedLen\">KeyGeneratorMaxEncodedLen</a>, TupleElement1: KeyGeneratorInner + <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGeneratorMaxEncodedLen.html\" title=\"trait frame_support::storage::types::KeyGeneratorMaxEncodedLen\">KeyGeneratorMaxEncodedLen</a>&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.KeyGeneratorMaxEncodedLen.html\" title=\"trait frame_support::storage::types::KeyGeneratorMaxEncodedLen\">KeyGeneratorMaxEncodedLen</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.key_max_encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#151-159\">source</a><a href=\"#method.key_max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.KeyGeneratorMaxEncodedLen.html#tymethod.key_max_encoded_len\" class=\"fn\">key_max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","KeyGeneratorMaxEncodedLen","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/max_encoded_len.rs.html#84-90\">source</a><a href=\"#impl-MaxEncodedLen-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0, TupleElement1&gt; <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.MaxEncodedLen.html\" title=\"trait frame_support::pallet_prelude::MaxEncodedLen\">MaxEncodedLen</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a><div class=\"where\">where\n    TupleElement0: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.MaxEncodedLen.html\" title=\"trait frame_support::pallet_prelude::MaxEncodedLen\">MaxEncodedLen</a>,\n    TupleElement1: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.MaxEncodedLen.html\" title=\"trait frame_support::pallet_prelude::MaxEncodedLen\">MaxEncodedLen</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parity_scale_codec/max_encoded_len.rs.html#85\">source</a><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.MaxEncodedLen.html#tymethod.max_encoded_len\" class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MigrationStatusHandler-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#568\">source</a><a href=\"#impl-MigrationStatusHandler-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/migrations/trait.MigrationStatusHandler.html\" title=\"trait frame_support::migrations::MigrationStatusHandler\">MigrationStatusHandler</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/migrations/trait.MigrationStatusHandler.html\" title=\"trait frame_support::migrations::MigrationStatusHandler\">MigrationStatusHandler</a>&gt; <a class=\"trait\" href=\"frame_support/migrations/trait.MigrationStatusHandler.html\" title=\"trait frame_support::migrations::MigrationStatusHandler\">MigrationStatusHandler</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.started\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#568\">source</a><a href=\"#method.started\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.MigrationStatusHandler.html#method.started\" class=\"fn\">started</a>()</h4></section></summary><div class=\"docblock\"><p>Notifies of the start of a runtime migration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.completed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#568\">source</a><a href=\"#method.completed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.MigrationStatusHandler.html#method.completed\" class=\"fn\">completed</a>()</h4></section></summary><div class=\"docblock\"><p>Notifies of the completion of a runtime migration.</p>\n</div></details></div></details>","MigrationStatusHandler","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/misc.rs.html#868\">source</a><a href=\"#impl-OffchainWorker%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;BlockNumber, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OffchainWorker.html\" title=\"trait frame_support::traits::OffchainWorker\">OffchainWorker</a>&lt;BlockNumber&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OffchainWorker.html\" title=\"trait frame_support::traits::OffchainWorker\">OffchainWorker</a>&lt;BlockNumber&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OffchainWorker.html\" title=\"trait frame_support::traits::OffchainWorker\">OffchainWorker</a>&lt;BlockNumber&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a><div class=\"where\">where\n    BlockNumber: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/misc.rs.html#868\">source</a><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OffchainWorker.html#method.offchain_worker\" class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class=\"docblock\"><p>This function is being called after every block import (when fully synced).</p>\n<p>Implement this and use any of the <code>Offchain</code> <code>sp_io</code> set of APIs\nto perform off-chain computations, calls and submit transactions\nwith results to trigger any on-chain changes.\nAny state alterations are lost and are not persisted.</p>\n</div></details></div></details>","OffchainWorker<BlockNumber>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#117\">source</a><a href=\"#impl-OnFinalize%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;BlockNumber, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnFinalize.html\" title=\"trait frame_support::traits::OnFinalize\">OnFinalize</a>&lt;BlockNumber&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnFinalize.html\" title=\"trait frame_support::traits::OnFinalize\">OnFinalize</a>&lt;BlockNumber&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnFinalize.html\" title=\"trait frame_support::traits::OnFinalize\">OnFinalize</a>&lt;BlockNumber&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a><div class=\"where\">where\n    BlockNumber: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#117\">source</a><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnFinalize.html#method.on_finalize\" class=\"fn\">on_finalize</a>(_n: BlockNumber)</h4></section></summary><div class=\"docblock\"><p>See <a href=\"frame_support/traits/trait.Hooks.html#method.on_finalize\" title=\"associated function frame_support::traits::Hooks::on_finalize\"><code>Hooks::on_finalize</code></a>.</p>\n</div></details></div></details>","OnFinalize<BlockNumber>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#159\">source</a><a href=\"#impl-OnGenesis-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnGenesis.html\" title=\"trait frame_support::traits::OnGenesis\">OnGenesis</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnGenesis.html\" title=\"trait frame_support::traits::OnGenesis\">OnGenesis</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnGenesis.html\" title=\"trait frame_support::traits::OnGenesis\">OnGenesis</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#159\">source</a><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnGenesis.html#method.on_genesis\" class=\"fn\">on_genesis</a>()</h4></section></summary><div class=\"docblock\"><p>Something that should happen at genesis.</p>\n</div></details></div></details>","OnGenesis","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#136-152\">source</a><a href=\"#impl-OnIdle%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;BlockNumber: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"sp_arithmetic/traits/trait.AtLeast32BitUnsigned.html\" title=\"trait sp_arithmetic::traits::AtLeast32BitUnsigned\">AtLeast32BitUnsigned</a>, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnIdle.html\" title=\"trait frame_support::traits::OnIdle\">OnIdle</a>&lt;BlockNumber&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnIdle.html\" title=\"trait frame_support::traits::OnIdle\">OnIdle</a>&lt;BlockNumber&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnIdle.html\" title=\"trait frame_support::traits::OnIdle\">OnIdle</a>&lt;BlockNumber&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#137-151\">source</a><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnIdle.html#method.on_idle\" class=\"fn\">on_idle</a>(n: BlockNumber, remaining_weight: <a class=\"struct\" href=\"frame_support/pallet_prelude/struct.Weight.html\" title=\"struct frame_support::pallet_prelude::Weight\">Weight</a>) -&gt; <a class=\"struct\" href=\"frame_support/pallet_prelude/struct.Weight.html\" title=\"struct frame_support::pallet_prelude::Weight\">Weight</a></h4></section></summary><div class='docblock'>See <a href=\"frame_support/traits/trait.Hooks.html#method.on_idle\" title=\"associated function frame_support::traits::Hooks::on_idle\"><code>Hooks::on_idle</code></a>.</div></details></div></details>","OnIdle<BlockNumber>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#108-114\">source</a><a href=\"#impl-OnInitialize%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;BlockNumber: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnInitialize.html\" title=\"trait frame_support::traits::OnInitialize\">OnInitialize</a>&lt;BlockNumber&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnInitialize.html\" title=\"trait frame_support::traits::OnInitialize\">OnInitialize</a>&lt;BlockNumber&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnInitialize.html\" title=\"trait frame_support::traits::OnInitialize\">OnInitialize</a>&lt;BlockNumber&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#109-113\">source</a><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnInitialize.html#method.on_initialize\" class=\"fn\">on_initialize</a>(n: BlockNumber) -&gt; <a class=\"struct\" href=\"frame_support/pallet_prelude/struct.Weight.html\" title=\"struct frame_support::pallet_prelude::Weight\">Weight</a></h4></section></summary><div class='docblock'>See <a href=\"frame_support/traits/trait.Hooks.html#method.on_initialize\" title=\"associated function frame_support::traits::Hooks::on_initialize\"><code>Hooks::on_initialize</code></a>.</div></details></div></details>","OnInitialize<BlockNumber>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnKilledAccount%3CAccountId%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/misc.rs.html#708\">source</a><a href=\"#impl-OnKilledAccount%3CAccountId%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;AccountId, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnKilledAccount.html\" title=\"trait frame_support::traits::OnKilledAccount\">OnKilledAccount</a>&lt;AccountId&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnKilledAccount.html\" title=\"trait frame_support::traits::OnKilledAccount\">OnKilledAccount</a>&lt;AccountId&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnKilledAccount.html\" title=\"trait frame_support::traits::OnKilledAccount\">OnKilledAccount</a>&lt;AccountId&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_killed_account\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/misc.rs.html#708\">source</a><a href=\"#method.on_killed_account\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnKilledAccount.html#tymethod.on_killed_account\" class=\"fn\">on_killed_account</a>(who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;AccountId</a>)</h4></section></summary><div class=\"docblock\"><p>The account with the given id was reaped.</p>\n</div></details></div></details>","OnKilledAccount<AccountId>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnNewAccount%3CAccountId%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/misc.rs.html#699\">source</a><a href=\"#impl-OnNewAccount%3CAccountId%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;AccountId, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnNewAccount.html\" title=\"trait frame_support::traits::OnNewAccount\">OnNewAccount</a>&lt;AccountId&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnNewAccount.html\" title=\"trait frame_support::traits::OnNewAccount\">OnNewAccount</a>&lt;AccountId&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnNewAccount.html\" title=\"trait frame_support::traits::OnNewAccount\">OnNewAccount</a>&lt;AccountId&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_new_account\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/misc.rs.html#699\">source</a><a href=\"#method.on_new_account\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnNewAccount.html#tymethod.on_new_account\" class=\"fn\">on_new_account</a>(who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;AccountId</a>)</h4></section></summary><div class=\"docblock\"><p>A new account <code>who</code> has been registered.</p>\n</div></details></div></details>","OnNewAccount<AccountId>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#91-95\">source</a><a href=\"#impl-OnPoll%3CBlockNumber%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;BlockNumber: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnPoll.html\" title=\"trait frame_support::traits::OnPoll\">OnPoll</a>&lt;BlockNumber&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnPoll.html\" title=\"trait frame_support::traits::OnPoll\">OnPoll</a>&lt;BlockNumber&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnPoll.html\" title=\"trait frame_support::traits::OnPoll\">OnPoll</a>&lt;BlockNumber&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#92-94\">source</a><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnPoll.html#method.on_poll\" class=\"fn\">on_poll</a>(n: BlockNumber, weight: &amp;mut <a class=\"struct\" href=\"frame_support/weights/struct.WeightMeter.html\" title=\"struct frame_support::weights::WeightMeter\">WeightMeter</a>)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a href=\"frame_support/traits/trait.OnPoll.html#method.on_poll\">Read more</a></div></details></div></details>","OnPoll<BlockNumber>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#271-335\">source</a><a href=\"#impl-OnRuntimeUpgrade-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnRuntimeUpgrade.html\" title=\"trait frame_support::traits::OnRuntimeUpgrade\">OnRuntimeUpgrade</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnRuntimeUpgrade.html\" title=\"trait frame_support::traits::OnRuntimeUpgrade\">OnRuntimeUpgrade</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnRuntimeUpgrade.html\" title=\"trait frame_support::traits::OnRuntimeUpgrade\">OnRuntimeUpgrade</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#273-277\">source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnRuntimeUpgrade.html#method.on_runtime_upgrade\" class=\"fn\">on_runtime_upgrade</a>() -&gt; <a class=\"struct\" href=\"frame_support/pallet_prelude/struct.Weight.html\" title=\"struct frame_support::pallet_prelude::Weight\">Weight</a></h4></section></summary><div class=\"docblock\"><p>Implements the default behavior of <a href=\"frame_support/traits/trait.OnRuntimeUpgrade.html#method.on_runtime_upgrade\" title=\"associated function frame_support::traits::OnRuntimeUpgrade::on_runtime_upgrade\"><code>OnRuntimeUpgrade::on_runtime_upgrade</code></a> for tuples.</p>\n</div></details></div></details>","OnRuntimeUpgrade","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnTimestampSet%3CMoment%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#616\">source</a><a href=\"#impl-OnTimestampSet%3CMoment%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Moment, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.OnTimestampSet.html\" title=\"trait frame_support::traits::OnTimestampSet\">OnTimestampSet</a>&lt;Moment&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.OnTimestampSet.html\" title=\"trait frame_support::traits::OnTimestampSet\">OnTimestampSet</a>&lt;Moment&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.OnTimestampSet.html\" title=\"trait frame_support::traits::OnTimestampSet\">OnTimestampSet</a>&lt;Moment&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a><div class=\"where\">where\n    Moment: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_timestamp_set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#616\">source</a><a href=\"#method.on_timestamp_set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.OnTimestampSet.html#tymethod.on_timestamp_set\" class=\"fn\">on_timestamp_set</a>(moment: Moment)</h4></section></summary><div class=\"docblock\"><p>Called when the timestamp is set.</p>\n</div></details></div></details>","OnTimestampSet<Moment>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletError-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/error.rs.html#89-95\">source</a><a href=\"#impl-PalletError-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.PalletError.html\" title=\"trait frame_support::traits::PalletError\">PalletError</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.PalletError.html\" title=\"trait frame_support::traits::PalletError\">PalletError</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.PalletError.html\" title=\"trait frame_support::traits::PalletError\">PalletError</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_ENCODED_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/error.rs.html#90-94\">source</a><a href=\"#associatedconstant.MAX_ENCODED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"frame_support/traits/trait.PalletError.html#associatedconstant.MAX_ENCODED_SIZE\" class=\"constant\">MAX_ENCODED_SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The maximum encoded size for the implementing type. <a href=\"frame_support/traits/trait.PalletError.html#associatedconstant.MAX_ENCODED_SIZE\">Read more</a></div></details></div></details>","PalletError","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletVersionToStorageVersionHelper-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#242-250\">source</a><a href=\"#impl-PalletVersionToStorageVersionHelper-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/migrations/trait.PalletVersionToStorageVersionHelper.html\" title=\"trait frame_support::migrations::PalletVersionToStorageVersionHelper\">PalletVersionToStorageVersionHelper</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/migrations/trait.PalletVersionToStorageVersionHelper.html\" title=\"trait frame_support::migrations::PalletVersionToStorageVersionHelper\">PalletVersionToStorageVersionHelper</a>&gt; <a class=\"trait\" href=\"frame_support/migrations/trait.PalletVersionToStorageVersionHelper.html\" title=\"trait frame_support::migrations::PalletVersionToStorageVersionHelper\">PalletVersionToStorageVersionHelper</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.migrate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#243-249\">source</a><a href=\"#method.migrate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.PalletVersionToStorageVersionHelper.html#tymethod.migrate\" class=\"fn\">migrate</a>(db_weight: &amp;<a class=\"struct\" href=\"frame_support/weights/struct.RuntimeDbWeight.html\" title=\"struct frame_support::weights::RuntimeDbWeight\">RuntimeDbWeight</a>) -&gt; <a class=\"struct\" href=\"frame_support/pallet_prelude/struct.Weight.html\" title=\"struct frame_support::pallet_prelude::Weight\">Weight</a></h4></section></div></details>","PalletVersionToStorageVersionHelper","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/metadata.rs.html#90-96\">source</a><a href=\"#impl-PalletsInfoAccess-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.PalletsInfoAccess.html\" title=\"trait frame_support::traits::PalletsInfoAccess\">PalletsInfoAccess</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.PalletsInfoAccess.html\" title=\"trait frame_support::traits::PalletsInfoAccess\">PalletsInfoAccess</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.PalletsInfoAccess.html\" title=\"trait frame_support::traits::PalletsInfoAccess\">PalletsInfoAccess</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/metadata.rs.html#91-95\">source</a><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.PalletsInfoAccess.html#tymethod.infos\" class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/struct.PalletInfoData.html\" title=\"struct frame_support::traits::PalletInfoData\">PalletInfoData</a>&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/metadata.rs.html#78-81\">source</a><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.PalletsInfoAccess.html#method.count\" class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a href=\"frame_support/traits/trait.PalletsInfoAccess.html#method.count\">Read more</a></div></details></div></details>","PalletsInfoAccess","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PostInherents-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#58-62\">source</a><a href=\"#impl-PostInherents-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.PostInherents.html\" title=\"trait frame_support::traits::PostInherents\">PostInherents</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.PostInherents.html\" title=\"trait frame_support::traits::PostInherents\">PostInherents</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.PostInherents.html\" title=\"trait frame_support::traits::PostInherents\">PostInherents</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_inherents\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#59-61\">source</a><a href=\"#method.post_inherents\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.PostInherents.html#method.post_inherents\" class=\"fn\">post_inherents</a>()</h4></section></summary><div class='docblock'>Called after all inherents were applied.</div></details></div></details>","PostInherents","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PostTransactions-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#73-77\">source</a><a href=\"#impl-PostTransactions-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.PostTransactions.html\" title=\"trait frame_support::traits::PostTransactions\">PostTransactions</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.PostTransactions.html\" title=\"trait frame_support::traits::PostTransactions\">PostTransactions</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.PostTransactions.html\" title=\"trait frame_support::traits::PostTransactions\">PostTransactions</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_transactions\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#74-76\">source</a><a href=\"#method.post_transactions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.PostTransactions.html#method.post_transactions\" class=\"fn\">post_transactions</a>()</h4></section></summary><div class='docblock'>Called after all transactions were applied but before <code>on_finalize</code>.</div></details></div></details>","PostTransactions","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PreInherents-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#43-47\">source</a><a href=\"#impl-PreInherents-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.PreInherents.html\" title=\"trait frame_support::traits::PreInherents\">PreInherents</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.PreInherents.html\" title=\"trait frame_support::traits::PreInherents\">PreInherents</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.PreInherents.html\" title=\"trait frame_support::traits::PreInherents\">PreInherents</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_inherents\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/hooks.rs.html#44-46\">source</a><a href=\"#method.pre_inherents\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.PreInherents.html#method.pre_inherents\" class=\"fn\">pre_inherents</a>()</h4></section></summary><div class='docblock'>Called before all inherents were applied but after <code>on_initialize</code>.</div></details></div></details>","PreInherents","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Printable-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2270-2274\">source</a><a href=\"#impl-Printable-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0, TupleElement1&gt; <a class=\"trait\" href=\"frame_support/trait.Printable.html\" title=\"trait frame_support::Printable\">Printable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a><div class=\"where\">where\n    TupleElement0: <a class=\"trait\" href=\"frame_support/trait.Printable.html\" title=\"trait frame_support::Printable\">Printable</a>,\n    TupleElement1: <a class=\"trait\" href=\"frame_support/trait.Printable.html\" title=\"trait frame_support::Printable\">Printable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.print\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2271\">source</a><a href=\"#method.print\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/trait.Printable.html#tymethod.print\" class=\"fn\">print</a>(&amp;self)</h4></section></summary><div class='docblock'>Print the object.</div></details></div></details>","Printable","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueuePausedQuery%3COrigin%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/messages.rs.html#252-261\">source</a><a href=\"#impl-QueuePausedQuery%3COrigin%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Origin, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.QueuePausedQuery.html\" title=\"trait frame_support::traits::QueuePausedQuery\">QueuePausedQuery</a>&lt;Origin&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.QueuePausedQuery.html\" title=\"trait frame_support::traits::QueuePausedQuery\">QueuePausedQuery</a>&lt;Origin&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.QueuePausedQuery.html\" title=\"trait frame_support::traits::QueuePausedQuery\">QueuePausedQuery</a>&lt;Origin&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_paused\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/messages.rs.html#253-260\">source</a><a href=\"#method.is_paused\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.QueuePausedQuery.html#tymethod.is_paused\" class=\"fn\">is_paused</a>(origin: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Origin</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether this queue is paused.</div></details></div></details>","QueuePausedQuery<Origin>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RankedMembersSwapHandler%3CAccountId,+Rank%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/members.rs.html#311\">source</a><a href=\"#impl-RankedMembersSwapHandler%3CAccountId,+Rank%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;AccountId, Rank, TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.RankedMembersSwapHandler.html\" title=\"trait frame_support::traits::RankedMembersSwapHandler\">RankedMembersSwapHandler</a>&lt;AccountId, Rank&gt;, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.RankedMembersSwapHandler.html\" title=\"trait frame_support::traits::RankedMembersSwapHandler\">RankedMembersSwapHandler</a>&lt;AccountId, Rank&gt;&gt; <a class=\"trait\" href=\"frame_support/traits/trait.RankedMembersSwapHandler.html\" title=\"trait frame_support::traits::RankedMembersSwapHandler\">RankedMembersSwapHandler</a>&lt;AccountId, Rank&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a><div class=\"where\">where\n    Rank: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.swapped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/members.rs.html#311\">source</a><a href=\"#method.swapped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.RankedMembersSwapHandler.html#tymethod.swapped\" class=\"fn\">swapped</a>(who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;AccountId</a>, new_who: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;AccountId</a>, rank: Rank)</h4></section></summary><div class=\"docblock\"><p>Member <code>old</code> was swapped with <code>new</code> at <code>rank</code>.</p>\n</div></details></div></details>","RankedMembersSwapHandler<AccountId, Rank>","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReversibleKeyGenerator-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#252-268\">source</a><a href=\"#impl-ReversibleKeyGenerator-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html\" title=\"trait frame_support::storage::types::ReversibleKeyGenerator\">ReversibleKeyGenerator</a> + KeyGeneratorInner, TupleElement1: <a class=\"trait\" href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html\" title=\"trait frame_support::storage::types::ReversibleKeyGenerator\">ReversibleKeyGenerator</a> + KeyGeneratorInner&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html\" title=\"trait frame_support::storage::types::ReversibleKeyGenerator\">ReversibleKeyGenerator</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.ReversibleHasher\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ReversibleHasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html#associatedtype.ReversibleHasher\" class=\"associatedtype\">ReversibleHasher</a> = (&lt;TupleElement0 as <a class=\"trait\" href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html\" title=\"trait frame_support::storage::types::ReversibleKeyGenerator\">ReversibleKeyGenerator</a>&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html#associatedtype.ReversibleHasher\" title=\"type frame_support::storage::types::ReversibleKeyGenerator::ReversibleHasher\">ReversibleHasher</a>, &lt;TupleElement1 as <a class=\"trait\" href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html\" title=\"trait frame_support::storage::types::ReversibleKeyGenerator\">ReversibleKeyGenerator</a>&gt;::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html#associatedtype.ReversibleHasher\" title=\"type frame_support::storage::types::ReversibleKeyGenerator::ReversibleHasher\">ReversibleHasher</a>)</h4></section><section id=\"method.decode_final_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#255-267\">source</a><a href=\"#method.decode_final_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.ReversibleKeyGenerator.html#tymethod.decode_final_key\" class=\"fn\">decode_final_key</a>(key_material: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self::<a class=\"associatedtype\" href=\"frame_support/storage/types/trait.KeyGenerator.html#associatedtype.Key\" title=\"type frame_support::storage::types::KeyGenerator::Key\">Key</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>]), <a class=\"struct\" href=\"parity_scale_codec/error/struct.Error.html\" title=\"struct parity_scale_codec::error::Error\">Error</a>&gt;</h4></section></div></details>","ReversibleKeyGenerator","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SteppedMigrations-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#845-933\">source</a><a href=\"#impl-SteppedMigrations-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/migrations/trait.SteppedMigrations.html\" title=\"trait frame_support::migrations::SteppedMigrations\">SteppedMigrations</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/migrations/trait.SteppedMigrations.html\" title=\"trait frame_support::migrations::SteppedMigrations\">SteppedMigrations</a>&gt; <a class=\"trait\" href=\"frame_support/migrations/trait.SteppedMigrations.html\" title=\"trait frame_support::migrations::SteppedMigrations\">SteppedMigrations</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#846-848\">source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.len\" class=\"fn\">len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The number of migrations that <code>Self</code> aggregates.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#850-862\">source</a><a href=\"#method.nth_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.nth_id\" class=\"fn\">nth_id</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class='docblock'>The <code>n</code>th <a href=\"frame_support/migrations/trait.SteppedMigration.html#tymethod.id\" title=\"associated function frame_support::migrations::SteppedMigration::id\"><code>SteppedMigration::id</code></a>. <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.nth_id\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_step\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#864-880\">source</a><a href=\"#method.nth_step\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.nth_step\" class=\"fn\">nth_step</a>(\n    n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n    cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt;,\n    meter: &amp;mut <a class=\"struct\" href=\"frame_support/weights/struct.WeightMeter.html\" title=\"struct frame_support::weights::WeightMeter\">WeightMeter</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"frame_support/migrations/enum.SteppedMigrationError.html\" title=\"enum frame_support::migrations::SteppedMigrationError\">SteppedMigrationError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Do a <a href=\"frame_support/migrations/trait.SteppedMigration.html#tymethod.step\" title=\"associated function frame_support::migrations::SteppedMigration::step\"><code>SteppedMigration::step</code></a> on the <code>n</code>th migration. <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.nth_step\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_transactional_step\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#882-898\">source</a><a href=\"#method.nth_transactional_step\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.nth_transactional_step\" class=\"fn\">nth_transactional_step</a>(\n    n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n    cursor: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt;,\n    meter: &amp;mut <a class=\"struct\" href=\"frame_support/weights/struct.WeightMeter.html\" title=\"struct frame_support::weights::WeightMeter\">WeightMeter</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"frame_support/migrations/enum.SteppedMigrationError.html\" title=\"enum frame_support::migrations::SteppedMigrationError\">SteppedMigrationError</a>&gt;&gt;</h4></section></summary><div class='docblock'>Do a <a href=\"frame_support/migrations/trait.SteppedMigration.html#method.transactional_step\" title=\"associated function frame_support::migrations::SteppedMigration::transactional_step\"><code>SteppedMigration::transactional_step</code></a> on the <code>n</code>th migration. <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.nth_transactional_step\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_max_steps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#900-912\">source</a><a href=\"#method.nth_max_steps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.nth_max_steps\" class=\"fn\">nth_max_steps</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class='docblock'>The <a href=\"frame_support/migrations/trait.SteppedMigration.html#method.max_steps\" title=\"associated function frame_support::migrations::SteppedMigration::max_steps\"><code>SteppedMigration::max_steps</code></a> of the <code>n</code>th migration. <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.nth_max_steps\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cursor_max_encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#914-922\">source</a><a href=\"#method.cursor_max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.cursor_max_encoded_len\" class=\"fn\">cursor_max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The maximal encoded length across all cursors.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.identifier_max_encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#924-932\">source</a><a href=\"#method.identifier_max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.SteppedMigrations.html#tymethod.identifier_max_encoded_len\" class=\"fn\">identifier_max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The maximal encoded length across all identifiers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/migrations.rs.html#713-733\">source</a><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/migrations/trait.SteppedMigrations.html#method.integrity_test\" class=\"fn\">integrity_test</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Assert the integrity of the migrations. <a href=\"frame_support/migrations/trait.SteppedMigrations.html#method.integrity_test\">Read more</a></div></details></div></details>","SteppedMigrations","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/storage.rs.html#120-126\">source</a><a href=\"#impl-StorageInfoTrait-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::StorageInfoTrait\">StorageInfoTrait</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::StorageInfoTrait\">StorageInfoTrait</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.StorageInfoTrait.html\" title=\"trait frame_support::traits::StorageInfoTrait\">StorageInfoTrait</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/storage.rs.html#121-125\">source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.StorageInfoTrait.html#tymethod.storage_info\" class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/struct.StorageInfo.html\" title=\"struct frame_support::traits::StorageInfo\">StorageInfo</a>&gt;</h4></section></div></details>","StorageInfoTrait","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TupleToEncodedIter-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#211-215\">source</a><a href=\"#impl-TupleToEncodedIter-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a>&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.TupleToEncodedIter.html\" title=\"trait frame_support::storage::types::TupleToEncodedIter\">TupleToEncodedIter</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_encoded_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#212-214\">source</a><a href=\"#method.to_encoded_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/storage/types/trait.TupleToEncodedIter.html#tymethod.to_encoded_iter\" class=\"fn\">to_encoded_iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/into_iter/struct.IntoIter.html\" title=\"struct alloc::vec::into_iter::IntoIter\">IntoIter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"IntoIter&lt;Vec&lt;u8&gt;&gt;\">ⓘ</a></h4></section></div></details>","TupleToEncodedIter","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/scale_info/impls.rs.html#92\">source</a><a href=\"#impl-TypeInfo-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.TypeInfo.html\" title=\"trait frame_support::pallet_prelude::TypeInfo\">TypeInfo</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.TypeInfo.html\" title=\"trait frame_support::pallet_prelude::TypeInfo\">TypeInfo</a> + 'static,\n    B: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.TypeInfo.html\" title=\"trait frame_support::pallet_prelude::TypeInfo\">TypeInfo</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"frame_support/pallet_prelude/trait.TypeInfo.html#associatedtype.Identity\" class=\"associatedtype\">Identity</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a></h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a href=\"frame_support/pallet_prelude/trait.TypeInfo.html#associatedtype.Identity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/scale_info/impls.rs.html#92\">source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/pallet_prelude/trait.TypeInfo.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; <a class=\"struct\" href=\"scale_info/ty/struct.Type.html\" title=\"struct scale_info::ty::Type\">Type</a></h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","frame_support::traits::schedule::Period"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/storage.rs.html#149-160\">source</a><a href=\"#impl-WhitelistedStorageKeys-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"frame_support/traits/trait.WhitelistedStorageKeys.html\" title=\"trait frame_support::traits::WhitelistedStorageKeys\">WhitelistedStorageKeys</a>, TupleElement1: <a class=\"trait\" href=\"frame_support/traits/trait.WhitelistedStorageKeys.html\" title=\"trait frame_support::traits::WhitelistedStorageKeys\">WhitelistedStorageKeys</a>&gt; <a class=\"trait\" href=\"frame_support/traits/trait.WhitelistedStorageKeys.html\" title=\"trait frame_support::traits::WhitelistedStorageKeys\">WhitelistedStorageKeys</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_support/traits/storage.rs.html#150-159\">source</a><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_support/traits/trait.WhitelistedStorageKeys.html#tymethod.whitelisted_storage_keys\" class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"frame_support/traits/struct.TrackedStorageKey.html\" title=\"struct frame_support::traits::TrackedStorageKey\">TrackedStorageKey</a>&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","frame_support::traits::schedule::Period"],["<section id=\"impl-EncodeLikeTuple%3C(A,+B)%3E-for-(AA,+BB)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_support/storage/types/key.rs.html#182\">source</a><a href=\"#impl-EncodeLikeTuple%3C(A,+B)%3E-for-(AA,+BB)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a>, B: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a>, AA: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a> + <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a>&lt;A&gt;, BB: <a class=\"trait\" href=\"frame_support/pallet_prelude/trait.Encode.html\" title=\"trait frame_support::pallet_prelude::Encode\">Encode</a> + <a class=\"trait\" href=\"parity_scale_codec/encode_like/trait.EncodeLike.html\" title=\"trait parity_scale_codec::encode_like::EncodeLike\">EncodeLike</a>&lt;B&gt;&gt; <a class=\"trait\" href=\"frame_support/storage/types/trait.EncodeLikeTuple.html\" title=\"trait frame_support::storage::types::EncodeLikeTuple\">EncodeLikeTuple</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(AA, BB)</a></h3></section>","EncodeLikeTuple<(A, B)>","frame_support::traits::schedule::Period"]],
"frame_system":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConsumerLimits-for-(MaxNormal,+MaxOverflow)\" class=\"impl\"><a class=\"src rightside\" href=\"src/frame_system/lib.rs.html#234-241\">source</a><a href=\"#impl-ConsumerLimits-for-(MaxNormal,+MaxOverflow)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MaxNormal: <a class=\"trait\" href=\"bounded_collections/trait.Get.html\" title=\"trait bounded_collections::Get\">Get</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>&gt;, MaxOverflow: <a class=\"trait\" href=\"bounded_collections/trait.Get.html\" title=\"trait bounded_collections::Get\">Get</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>&gt;&gt; <a class=\"trait\" href=\"frame_system/trait.ConsumerLimits.html\" title=\"trait frame_system::ConsumerLimits\">ConsumerLimits</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(MaxNormal, MaxOverflow)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_consumers\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_system/lib.rs.html#235-237\">source</a><a href=\"#method.max_consumers\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_system/trait.ConsumerLimits.html#tymethod.max_consumers\" class=\"fn\">max_consumers</a>() -&gt; <a class=\"type\" href=\"frame_system/type.RefCount.html\" title=\"type frame_system::RefCount\">RefCount</a></h4></section></summary><div class='docblock'>The number of consumers over which <code>inc_consumers</code> will cease to work.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_overflow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/frame_system/lib.rs.html#238-240\">source</a><a href=\"#method.max_overflow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"frame_system/trait.ConsumerLimits.html#tymethod.max_overflow\" class=\"fn\">max_overflow</a>() -&gt; <a class=\"type\" href=\"frame_system/type.RefCount.html\" title=\"type frame_system::RefCount\">RefCount</a></h4></section></summary><div class='docblock'>The maximum number of additional consumers expected to be over be added at once using\n<code>inc_consumers_without_limit</code>. <a href=\"frame_system/trait.ConsumerLimits.html#tymethod.max_overflow\">Read more</a></div></details></div></details>","ConsumerLimits","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","frame_system::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","frame_system::KeyValue"]],
"hash_db":[],
"sp_io":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","sp_io::SubstrateHostFunctions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","sp_io::SubstrateHostFunctions"]],
"sp_runtime":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-(S,+T)\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#112\">source</a><a href=\"#impl-Bounded-for-(S,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.Bounded.html\" title=\"trait sp_runtime::traits::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(S, T)</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"sp_runtime/traits/trait.Bounded.html\" title=\"trait sp_runtime::traits::Bounded\">Bounded</a>,\n    T: <a class=\"trait\" href=\"sp_runtime/traits/trait.Bounded.html\" title=\"trait sp_runtime::traits::Bounded\">Bounded</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1&gt; <a class=\"trait\" href=\"sp_runtime/trait.Deserialize.html\" title=\"trait sp_runtime::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"sp_runtime/trait.Deserialize.html\" title=\"trait sp_runtime::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"sp_runtime/trait.Deserialize.html\" title=\"trait sp_runtime::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"sp_runtime/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaybeConvert%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#590-600\">source</a><a href=\"#impl-MaybeConvert%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, B, TupleElement0: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeConvert.html\" title=\"trait sp_runtime::traits::MaybeConvert\">MaybeConvert</a>&lt;A, B&gt;, TupleElement1: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeConvert.html\" title=\"trait sp_runtime::traits::MaybeConvert\">MaybeConvert</a>&lt;A, B&gt;&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeConvert.html\" title=\"trait sp_runtime::traits::MaybeConvert\">MaybeConvert</a>&lt;A, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_convert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#591-599\">source</a><a href=\"#method.maybe_convert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.MaybeConvert.html#tymethod.maybe_convert\" class=\"fn\">maybe_convert</a>(a: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;</h4></section></summary><div class='docblock'>Attempt to make conversion.</div></details></div></details>","MaybeConvert<A, B>","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaybeConvertBack%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#610-620\">source</a><a href=\"#impl-MaybeConvertBack%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, TupleElement0: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeConvertBack.html\" title=\"trait sp_runtime::traits::MaybeConvertBack\">MaybeConvertBack</a>&lt;A, B&gt;, TupleElement1: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeConvertBack.html\" title=\"trait sp_runtime::traits::MaybeConvertBack\">MaybeConvertBack</a>&lt;A, B&gt;&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeConvertBack.html\" title=\"trait sp_runtime::traits::MaybeConvertBack\">MaybeConvertBack</a>&lt;A, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_convert_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#611-619\">source</a><a href=\"#method.maybe_convert_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.MaybeConvertBack.html#tymethod.maybe_convert_back\" class=\"fn\">maybe_convert_back</a>(b: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;</h4></section></summary><div class='docblock'>Attempt to make conversion back.</div></details></div></details>","MaybeConvertBack<A, B>","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaybeEquivalence%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#672-691\">source</a><a href=\"#impl-MaybeEquivalence%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, TupleElement0: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;A, B&gt;, TupleElement1: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;A, B&gt;&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;A, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.convert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#673-681\">source</a><a href=\"#method.convert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.MaybeEquivalence.html#tymethod.convert\" class=\"fn\">convert</a>(a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;A</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;</h4></section></summary><div class='docblock'>Attempt to convert reference of <code>A</code> into value of <code>B</code>, returning <code>None</code> if not possible.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.convert_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#682-690\">source</a><a href=\"#method.convert_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.MaybeEquivalence.html#tymethod.convert_back\" class=\"fn\">convert_back</a>(b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;B</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;</h4></section></summary><div class='docblock'>Attempt to convert reference of <code>B</code> into value of <code>A</code>, returning <code>None</code> if not possible.</div></details></div></details>","MaybeEquivalence<A, B>","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Printable-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2270-2274\">source</a><a href=\"#impl-Printable-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TupleElement0: <a class=\"trait\" href=\"sp_runtime/traits/trait.Printable.html\" title=\"trait sp_runtime::traits::Printable\">Printable</a>, TupleElement1: <a class=\"trait\" href=\"sp_runtime/traits/trait.Printable.html\" title=\"trait sp_runtime::traits::Printable\">Printable</a>&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.Printable.html\" title=\"trait sp_runtime::traits::Printable\">Printable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.print\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#2271-2273\">source</a><a href=\"#method.print\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.Printable.html#tymethod.print\" class=\"fn\">print</a>(&amp;self)</h4></section></summary><div class='docblock'>Print the object.</div></details></div></details>","Printable","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">source</a><a href=\"#impl-Serialize-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"sp_runtime/trait.Serialize.html\" title=\"trait sp_runtime::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"sp_runtime/trait.Serialize.html\" title=\"trait sp_runtime::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"sp_runtime/trait.Serialize.html\" title=\"trait sp_runtime::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"sp_runtime/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SignedExtension-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1621-1697\">source</a><a href=\"#impl-SignedExtension-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;AccountId, Call: <a class=\"trait\" href=\"sp_runtime/traits/trait.Dispatchable.html\" title=\"trait sp_runtime::traits::Dispatchable\">Dispatchable</a>, TupleElement0, TupleElement1&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a><div class=\"where\">where\n    TupleElement0: <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a>&lt;AccountId = AccountId, Call = Call&gt; + <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a>,\n    TupleElement1: <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a>&lt;AccountId = AccountId, Call = Call&gt; + <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AccountId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AccountId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.AccountId\" class=\"associatedtype\">AccountId</a> = AccountId</h4></section></summary><div class='docblock'>The type which encodes the sender identity.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Call\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Call\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" class=\"associatedtype\">Call</a> = Call</h4></section></summary><div class='docblock'>The type which encodes the call to be dispatched.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IDENTIFIER\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1625\">source</a><a href=\"#associatedconstant.IDENTIFIER\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"sp_runtime/traits/trait.SignedExtension.html#associatedconstant.IDENTIFIER\" class=\"constant\">IDENTIFIER</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a> = &quot;You should call `identifier()`!&quot;</h4></section></summary><div class='docblock'>Unique identifier of this signed extension. <a href=\"sp_runtime/traits/trait.SignedExtension.html#associatedconstant.IDENTIFIER\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AdditionalSigned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AdditionalSigned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.AdditionalSigned\" class=\"associatedtype\">AdditionalSigned</a> = (&lt;TupleElement0 as <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.AdditionalSigned\" title=\"type sp_runtime::traits::SignedExtension::AdditionalSigned\">AdditionalSigned</a>, &lt;TupleElement1 as <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.AdditionalSigned\" title=\"type sp_runtime::traits::SignedExtension::AdditionalSigned\">AdditionalSigned</a>)</h4></section></summary><div class='docblock'>Any additional data that will go into the signed payload. This may be created dynamically\nfrom the transaction using the <code>additional_signed</code> function.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Pre\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Pre\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Pre\" class=\"associatedtype\">Pre</a> = (&lt;TupleElement0 as <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Pre\" title=\"type sp_runtime::traits::SignedExtension::Pre\">Pre</a>, &lt;TupleElement1 as <a class=\"trait\" href=\"sp_runtime/traits/trait.SignedExtension.html\" title=\"trait sp_runtime::traits::SignedExtension\">SignedExtension</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Pre\" title=\"type sp_runtime::traits::SignedExtension::Pre\">Pre</a>)</h4></section></summary><div class='docblock'>The type that encodes information that can be passed from pre_dispatch to post-dispatch.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.additional_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1629-1631\">source</a><a href=\"#method.additional_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.SignedExtension.html#tymethod.additional_signed\" class=\"fn\">additional_signed</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.AdditionalSigned\" title=\"type sp_runtime::traits::SignedExtension::AdditionalSigned\">AdditionalSigned</a>, <a class=\"enum\" href=\"sp_runtime/transaction_validity/enum.TransactionValidityError.html\" title=\"enum sp_runtime::transaction_validity::TransactionValidityError\">TransactionValidityError</a>&gt;</h4></section></summary><div class='docblock'>Construct any additional data that should be in the signed payload of the transaction. Can\nalso perform any pre-signature-verification checks and return an error if needed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1633-1643\">source</a><a href=\"#method.validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.validate\" class=\"fn\">validate</a>(\n    &amp;self,\n    who: &amp;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.AccountId\" title=\"type sp_runtime::traits::SignedExtension::AccountId\">AccountId</a>,\n    call: &amp;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>,\n    info: &amp;<a class=\"type\" href=\"sp_runtime/traits/type.DispatchInfoOf.html\" title=\"type sp_runtime::traits::DispatchInfoOf\">DispatchInfoOf</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>&gt;,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"type\" href=\"sp_runtime/transaction_validity/type.TransactionValidity.html\" title=\"type sp_runtime::transaction_validity::TransactionValidity\">TransactionValidity</a></h4></section></summary><div class='docblock'>Validate a signed transaction for the transaction queue. <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_dispatch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1645-1653\">source</a><a href=\"#method.pre_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.SignedExtension.html#tymethod.pre_dispatch\" class=\"fn\">pre_dispatch</a>(\n    self,\n    who: &amp;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.AccountId\" title=\"type sp_runtime::traits::SignedExtension::AccountId\">AccountId</a>,\n    call: &amp;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>,\n    info: &amp;<a class=\"type\" href=\"sp_runtime/traits/type.DispatchInfoOf.html\" title=\"type sp_runtime::traits::DispatchInfoOf\">DispatchInfoOf</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>&gt;,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Pre\" title=\"type sp_runtime::traits::SignedExtension::Pre\">Pre</a>, <a class=\"enum\" href=\"sp_runtime/transaction_validity/enum.TransactionValidityError.html\" title=\"enum sp_runtime::transaction_validity::TransactionValidityError\">TransactionValidityError</a>&gt;</h4></section></summary><div class='docblock'>Do any pre-flight stuff for a signed transaction. <a href=\"sp_runtime/traits/trait.SignedExtension.html#tymethod.pre_dispatch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_unsigned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1655-1663\">source</a><a href=\"#method.validate_unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.validate_unsigned\" class=\"fn\">validate_unsigned</a>(\n    call: &amp;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>,\n    info: &amp;<a class=\"type\" href=\"sp_runtime/traits/type.DispatchInfoOf.html\" title=\"type sp_runtime::traits::DispatchInfoOf\">DispatchInfoOf</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>&gt;,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"type\" href=\"sp_runtime/transaction_validity/type.TransactionValidity.html\" title=\"type sp_runtime::transaction_validity::TransactionValidity\">TransactionValidity</a></h4></section></summary><div class='docblock'>Validate an unsigned transaction for the transaction queue. <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.validate_unsigned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_dispatch_unsigned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1665-1672\">source</a><a href=\"#method.pre_dispatch_unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.pre_dispatch_unsigned\" class=\"fn\">pre_dispatch_unsigned</a>(\n    call: &amp;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>,\n    info: &amp;<a class=\"type\" href=\"sp_runtime/traits/type.DispatchInfoOf.html\" title=\"type sp_runtime::traits::DispatchInfoOf\">DispatchInfoOf</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>&gt;,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"sp_runtime/transaction_validity/enum.TransactionValidityError.html\" title=\"enum sp_runtime::transaction_validity::TransactionValidityError\">TransactionValidityError</a>&gt;</h4></section></summary><div class='docblock'>Do any pre-flight stuff for a unsigned transaction. <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.pre_dispatch_unsigned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_dispatch\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1674-1690\">source</a><a href=\"#method.post_dispatch\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.post_dispatch\" class=\"fn\">post_dispatch</a>(\n    pre: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Pre\" title=\"type sp_runtime::traits::SignedExtension::Pre\">Pre</a>&gt;,\n    info: &amp;<a class=\"type\" href=\"sp_runtime/traits/type.DispatchInfoOf.html\" title=\"type sp_runtime::traits::DispatchInfoOf\">DispatchInfoOf</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>&gt;,\n    post_info: &amp;<a class=\"type\" href=\"sp_runtime/traits/type.PostDispatchInfoOf.html\" title=\"type sp_runtime::traits::PostDispatchInfoOf\">PostDispatchInfoOf</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.SignedExtension.html#associatedtype.Call\" title=\"type sp_runtime::traits::SignedExtension::Call\">Call</a>&gt;,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>,\n    result: &amp;<a class=\"type\" href=\"sp_runtime/type.DispatchResult.html\" title=\"type sp_runtime::DispatchResult\">DispatchResult</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"sp_runtime/transaction_validity/enum.TransactionValidityError.html\" title=\"enum sp_runtime::transaction_validity::TransactionValidityError\">TransactionValidityError</a>&gt;</h4></section></summary><div class='docblock'>Do any post-flight stuff for an extrinsic. <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.post_dispatch\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#1692-1696\">source</a><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.metadata\" class=\"fn\">metadata</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"sp_runtime/traits/struct.SignedExtensionMetadata.html\" title=\"struct sp_runtime::traits::SignedExtensionMetadata\">SignedExtensionMetadata</a>&gt;</h4></section></summary><div class='docblock'>Returns the metadata for this signed extension. <a href=\"sp_runtime/traits/trait.SignedExtension.html#method.metadata\">Read more</a></div></details></div></details>","SignedExtension","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StaticLookup-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#272-286\">source</a><a href=\"#impl-StaticLookup-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.StaticLookup.html\" title=\"trait sp_runtime::traits::StaticLookup\">StaticLookup</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"sp_runtime/traits/trait.StaticLookup.html\" title=\"trait sp_runtime::traits::StaticLookup\">StaticLookup</a>,\n    B: <a class=\"trait\" href=\"sp_runtime/traits/trait.StaticLookup.html\" title=\"trait sp_runtime::traits::StaticLookup\">StaticLookup</a>&lt;Source = A::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Source\" title=\"type sp_runtime::traits::StaticLookup::Source\">Source</a>, Target = A::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Target\" title=\"type sp_runtime::traits::StaticLookup::Target\">Target</a>&gt;,</div></h3></section></summary><div class=\"docblock\"><p>Perform a StaticLookup where there are multiple lookup sources of the same type.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Source\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Source\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Source\" class=\"associatedtype\">Source</a> = &lt;A as <a class=\"trait\" href=\"sp_runtime/traits/trait.StaticLookup.html\" title=\"trait sp_runtime::traits::StaticLookup\">StaticLookup</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Source\" title=\"type sp_runtime::traits::StaticLookup::Source\">Source</a></h4></section></summary><div class='docblock'>Type to lookup from.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = &lt;A as <a class=\"trait\" href=\"sp_runtime/traits/trait.StaticLookup.html\" title=\"trait sp_runtime::traits::StaticLookup\">StaticLookup</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Target\" title=\"type sp_runtime::traits::StaticLookup::Target\">Target</a></h4></section></summary><div class='docblock'>Type to lookup into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#280-282\">source</a><a href=\"#method.lookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.StaticLookup.html#tymethod.lookup\" class=\"fn\">lookup</a>(x: Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Source\" title=\"type sp_runtime::traits::StaticLookup::Source\">Source</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Target\" title=\"type sp_runtime::traits::StaticLookup::Target\">Target</a>, <a class=\"struct\" href=\"sp_runtime/traits/struct.LookupError.html\" title=\"struct sp_runtime::traits::LookupError\">LookupError</a>&gt;</h4></section></summary><div class='docblock'>Attempt a lookup.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unlookup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#283-285\">source</a><a href=\"#method.unlookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.StaticLookup.html#tymethod.unlookup\" class=\"fn\">unlookup</a>(x: Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Target\" title=\"type sp_runtime::traits::StaticLookup::Target\">Target</a>) -&gt; Self::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.StaticLookup.html#associatedtype.Source\" title=\"type sp_runtime::traits::StaticLookup::Source\">Source</a></h4></section></summary><div class='docblock'>Convert from Target back to Source.</div></details></div></details>","StaticLookup","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryConvert%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#630-640\">source</a><a href=\"#impl-TryConvert%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, TupleElement0: <a class=\"trait\" href=\"sp_runtime/traits/trait.TryConvert.html\" title=\"trait sp_runtime::traits::TryConvert\">TryConvert</a>&lt;A, B&gt;, TupleElement1: <a class=\"trait\" href=\"sp_runtime/traits/trait.TryConvert.html\" title=\"trait sp_runtime::traits::TryConvert\">TryConvert</a>&lt;A, B&gt;&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.TryConvert.html\" title=\"trait sp_runtime::traits::TryConvert\">TryConvert</a>&lt;A, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_convert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#631-639\">source</a><a href=\"#method.try_convert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.TryConvert.html#tymethod.try_convert\" class=\"fn\">try_convert</a>(a: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, A&gt;</h4></section></summary><div class='docblock'>Attempt to make conversion. If returning <a href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\">Result::Err</a>, the inner must always be <code>a</code>.</div></details></div></details>","TryConvert<A, B>","sp_runtime::Justification"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryConvertBack%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#651-661\">source</a><a href=\"#impl-TryConvertBack%3CA,+B%3E-for-(TupleElement0,+TupleElement1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, TupleElement0: <a class=\"trait\" href=\"sp_runtime/traits/trait.TryConvertBack.html\" title=\"trait sp_runtime::traits::TryConvertBack\">TryConvertBack</a>&lt;A, B&gt;, TupleElement1: <a class=\"trait\" href=\"sp_runtime/traits/trait.TryConvertBack.html\" title=\"trait sp_runtime::traits::TryConvertBack\">TryConvertBack</a>&lt;A, B&gt;&gt; <a class=\"trait\" href=\"sp_runtime/traits/trait.TryConvertBack.html\" title=\"trait sp_runtime::traits::TryConvertBack\">TryConvertBack</a>&lt;A, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(TupleElement0, TupleElement1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_convert_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_runtime/traits.rs.html#652-660\">source</a><a href=\"#method.try_convert_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_runtime/traits/trait.TryConvertBack.html#tymethod.try_convert_back\" class=\"fn\">try_convert_back</a>(b: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;A, B&gt;</h4></section></summary><div class='docblock'>Attempt to make conversion back. If returning <a href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\">Result::Err</a>, the inner must always be <code>b</code>.</div></details></div></details>","TryConvertBack<A, B>","sp_runtime::Justification"]],
"trie_db":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/iter/traits/collect.rs.html#497-500\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/iter/traits/collect.rs.html#522\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" title=\"method core::iter::traits::iterator::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/iter/traits/collect.rs.html#528\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/iter/traits/collect.rs.html#533\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","trie_db::node::NodeKey","trie_db::node_codec::Partial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/tuple.rs.html#201\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/tuple.rs.html#201\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","trie_db::node::NodeKey","trie_db::node_codec::Partial"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3C(AE,+BE)%3E-for-(A,+B)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.79.0\">1.79.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/iter/traits/collect.rs.html#175-178\">source</a></span><a href=\"#impl-FromIterator%3C(AE,+BE)%3E-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, AE, BE&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(AE, BE)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;AE&gt;,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;BE&gt;,</div></h3></section></summary><div class=\"docblock\"><p>This implementation turns an iterator of tuples into a tuple of types which implement\n<a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\"><code>Default</code></a> and <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\"><code>Extend</code></a>.</p>\n<p>This is similar to <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" title=\"method core::iter::traits::iterator::Iterator::unzip\"><code>Iterator::unzip</code></a>, but is also composable with other <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\"><code>FromIterator</code></a>\nimplementations:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>string = <span class=\"string\">\"1,2,123,4\"</span>;\n\n<span class=\"kw\">let </span>(numbers, lengths): (Vec&lt;<span class=\"kw\">_</span>&gt;, Vec&lt;<span class=\"kw\">_</span>&gt;) = string\n    .split(<span class=\"string\">','</span>)\n    .map(|s| s.parse().map(|n: u32| (n, s.len())))\n    .collect::&lt;<span class=\"prelude-ty\">Result</span>&lt;<span class=\"kw\">_</span>, <span class=\"kw\">_</span>&gt;&gt;()<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(numbers, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">123</span>, <span class=\"number\">4</span>]);\n<span class=\"macro\">assert_eq!</span>(lengths, [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>]);</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.81.0/src/core/iter/traits/collect.rs.html#180\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(AE, BE)</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<(AE, BE)>","trie_db::node::NodeKey","trie_db::node_codec::Partial"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()